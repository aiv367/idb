class IDB{constructor(e,t){let r,o;this.opts=Object.assign({version:1,onupgradeneeded(){},onsuccess(){},onerror(){},blocked(){}},t),this.db=void 0,this.request=void 0,this.dbPromise=new Promise((e,t)=>{r=e,o=t});let s=window.indexedDB.open(e,this.opts.version);s.onupgradeneeded=(e=>{this.opts.onupgradeneeded(e.target.result)}),s.onsuccess=(e=>{let t=e.target.result;this.db=t,this.opts.onsuccess(t),t.onversionchange=(e=>{t.close(),alert("IndexDB: 页面内容已过期，请刷新")}),r(t)}),s.onerror=(e=>{this.opts.onerror(e.target.error),o(e.target.error)}),s.blocked=(e=>{this.opts.blocked(e)}),this.request=s}store(e){let t=this,r={index:void 0,range:void 0,filter:void 0,limit:[0,0]};return{add:r=>new Promise((o,s)=>{t.dbPromise.then(t=>{let n=t.transaction([e],"readwrite").objectStore(e).add(r);n.onsuccess=o,n.onerror=s})}),update:r=>new Promise((o,s)=>{t.dbPromise.then(t=>{let n=t.transaction([e],"readwrite").objectStore(e).put(r);n.onsuccess=o,n.onerror=s})}),remove:o=>new Promise((s,n)=>{t.dbPromise.then(t=>{let i=t.transaction([e],"readwrite").objectStore(e).delete(void 0!==o?o:r.range);i.onsuccess=s,i.onerror=n})}),clear:()=>new Promise((r,o)=>{t.dbPromise.then(t=>{let s=t.transaction([e],"readwrite").objectStore(e).clear();s.onsuccess=r,s.onerror=o})}),gets:(o="rows")=>new Promise((s,n)=>{t.dbPromise.then(t=>{let i="count"===o?0:[],d=t.transaction([e],"readonly").objectStore(e),a=!1,c=r.limit[0],l=r.limit[1];r.index&&(d=d.index(r.index)),d=d.openCursor(r.range),d.onsuccess=(e=>{let t=e.target.result;if(!a&&t&&c)return a=!0,void t.advance(c);if(t)if((!r.filter||r.filter&&!0===r.filter(t.value))&&("count"===o?i++:i.push(t.value)),"single"===o)s(i[0]);else{let e="rows"===o?i.length:i;l&&e>=l?s(i):t.continue()}else s(i)}),d.onerror=(e=>{n(e)})})}),get(){return this.gets("single")},count(e,t){return this.gets("count")},index(e){return r.index=e,this},range(e){return r.range=e,this},filter(e){return r.filter=e,this},limit(e,t){return r.limit=[e,t],this}}}}IDB.prototype.removeDatabase=function(e){this.request.removeDatabase(e)};export default IDB;